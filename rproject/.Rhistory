knitr::opts_chunk$set(echo = TRUE)
list.files()
list.files(path = 'input')
list.files(path = 'input')
list.files(path = 'input')
library(tidyverse)
read_csv(file = 'input/testmeta.csv')
read_csv(file = 'input/testmeta.csv', col_names = F)
meta = read_csv(file = 'input/testmeta.csv', col_names = F)
meta
readLines(meta)
readLines(con = 'input/testmeta.csv')
x = 'a,a1.txt'
x %>% str_split(pattern = ',', n=2)
str_split(string=x, pattern = ',', n=2)
str_split(string=x, pattern = ',', n=2)[[1]]
str_split(string=x, pattern = ',', n=2)[[1]][1]
str_split(string=x, pattern = ',', n=2)[[1]][2]
readLines(con = 'input/testmeta.csv')
for (x in readLines(con = 'input/testmeta.csv')) {
foldername = str_split(string=x, pattern = ',', n=2)[[1]][1]
filename = str_split(string=x, pattern = ',', n=2)[[1]][2]
dir.create(path = foldername)
file.copy(from = paste0('input/', filename), to = paste0(foldername, '/', filename))
}
list.dir()
list.dirs()
list.dirs(recursive = F)
list.dirs(pattern = 'a', recursive = F)
dir(pattern = 'a', recursive = F)
dir(pattern = 'd', recursive = F)
dir(pattern = 'z', recursive = F)
file.exists('a')
file.exists('d')
for (x in readLines(con = 'input/testmeta.csv')) {
foldername = str_split(string=x, pattern = ',', n=2)[[1]][1]
filename = str_split(string=x, pattern = ',', n=2)[[1]][2]
if (file.exists(foldername)) {
file.copy(from = paste0('input/', filename), to = paste0(foldername, '/', filename))
} else {
dir.create(path = foldername)
file.copy(from = paste0('input/', filename), to = paste0(foldername, '/', filename))
}
}
list.files(path='input', pattern='.txt'
r list.files(path='input', pattern='.txt')
list.files(path='input', pattern='.txt')
list.files()
file.create('testfile.txt')
paste0('a', 1:3)
paste0('a', 1:3, '.txt')
paste0('a', 1:3, '.txt'), paste0('b', 1:3, '.txt'), paste0('b', 1:3, '.txt')
c(paste0('a', 1:3, '.txt'), paste0('b', 1:3, '.txt'), paste0('b', 1:3, '.txt'))
file_to_create = c(paste0('a', 1:3, '.txt'), paste0('b', 1:3, '.txt'), paste0('b', 1:3, '.txt'))
# loop each filename into the file.create function
for (x in file_to_create) {
file.create(x)
}
dir.create('testfolder')
file.copy(from = 'a1.txt', to = 'testfolder/a1.txt')
read_csv('reference_file.csv', col_names = F)
read_csv('reference_file.csv', col_names = F) %>% rename(folder=X1, filename=X2)
require("tidyverse")
if (!require("tidyverse", quietly = TRUE))
install.packages("tidyverse")
if (!require("tidyverse", quietly = TRUE))
install.packages("tidyverse")
library(tidyverse)
file_to_create
file_to_create %>%
tibble
file_to_create %>%
tibble %>%
rename('filename' = '.')
file_to_create %>%
tibble %>%
rename('filename' = '.') %>%
mutate(folder = str_extract(string=filename, pattern = '^[[:letter:]]{1}'))
file_to_create %>%
tibble %>%
rename('filename' = '.') %>%
mutate(folder = paste0('folder_', str_extract(string=filename, pattern = '^[[:letter:]]{1}')))
helper_file =
file_to_create %>%
tibble %>%
rename('filename' = '.') %>%
mutate(folder = paste0('folder_', str_extract(string=filename, pattern = '^[[:letter:]]{1}')))
helper_file
write_csv(helper_file, file = 'helper_file.csv')
write_csv(helper_file, file = 'helper_file.csv', col_names = F)
helper_file()
helper_file
file_to_create = c(paste0('a', 1:3, '.txt'), paste0('b', 1:3, '.txt'), paste0('c', 1:3, '.txt'))
# loop each filename into the file.create function
for (x in file_to_create) {
file.create(x)
}
file_to_create %>%
tibble %>%
rename('filename' = '.') %>%
mutate(folder = paste0('folder_', str_extract(string=filename, pattern = '^[[:letter:]]{1}')))
list.files(pattern='txt')
list.files()
list.files(pattern='txt')
file.remove(file_to_create)
list.files(pattern='txt', recursive = T)
